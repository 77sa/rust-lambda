openapi: "3.0.1"
info:
  title: "todos-api"
  version: "v1.0"
paths:
  /:
    get:
      summary: Get todos
      parameters:
        - in: query
          name: id
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
        500:
          description: "Internal Server Error"
          content: {}
      x-amazon-apigateway-integration:
        uri: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:get-todo/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      summary: Create a todo
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
        500:
          description: "Internal Server Error"
          content: {}
      x-amazon-apigateway-integration:
        uri: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:post-todo/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    patch:
      summary: Update a todo
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
        500:
          description: "Internal Server Error"
          content: {}
      x-amazon-apigateway-integration:
        uri: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:patch-todo-enqueue/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      summary: Delete a todo
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: object
        500:
          description: "Internal Server Error"
          content: {}
      x-amazon-apigateway-integration:
        uri: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:delete-todo/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
x-amazon-apigateway-policy:
  Version: "2012-10-17"
  Statement:
  - Effect: "Allow"
    Principal: "*"
    Action: "execute-api:Invoke"
    Resource: "*"
    Condition:
      IpAddress:
        aws:SourceIp:
        - "0.0.0.0/0"